name: Maven Build Publish Docker Image

env:
  APP_NAME: ihmsserviceapi

on:
  push:
    branches:
      - '**'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Build with Maven
        run: ./mvnw --no-transfer-progress clean verify
        env:
         GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ success() && github.ref == 'refs/heads/develop' }}
        name: Sonar Scan
        run: ./mvnw --no-transfer-progress initialize sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - if: ${{ success() &&  ( github.ref == 'refs/heads/develop' 
             || github.ref == 'refs/heads/qa' 
             || github.ref == 'refs/heads/release' 
             || github.ref == 'refs/heads/master' ) }}
        name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{github.actor}}
            password: ${{secrets.GITHUB_TOKEN}}
            
      - if: ${{ success() && github.ref == 'refs/heads/develop' }}
        name: Build and upload dev docker image to GHCR
        run: |
           docker build . --tag ghcr.io/${{ github.actor }}/dev-${{ env.APP_NAME }}:latest
           docker push ghcr.io/${{ github.actor }}/dev-${{ env.APP_NAME }}:latest

      - if: ${{ success() && github.ref == 'refs/heads/qa' }}
        name: Build and upload qa docker image to GHCR
        run: |
           docker build . --tag ghcr.io/${{ github.actor }}/qa-${{ env.APP_NAME }}:latest
           docker push ghcr.io/${{ github.actor }}/qa-${{ env.APP_NAME }}:latest

      - if: ${{ success() && github.ref == 'refs/heads/release' }}
        name: Build and upload release docker image to GHCR
        run: |
           docker build . --tag ghcr.io/${{ github.actor }}/staging-${{ env.APP_NAME }}:latest
           docker push ghcr.io/${{ github.actor }}/staging-${{ env.APP_NAME }}:latest

      - if: ${{ success() && github.ref == 'refs/heads/master' }}
        name: Build and upload prod docker image to GHCR
        run: |
           docker build . --tag ghcr.io/${{ github.actor }}/prod-${{ env.APP_NAME }}:latest
           docker push ghcr.io/${{ github.actor }}/prod-${{ env.APP_NAME }}:latest
