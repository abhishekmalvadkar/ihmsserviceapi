name: Dev CI

on:
  push:
    branches:
      - '**'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Build with Maven
        run: ./mvnw --no-transfer-progress clean verify
        env:
         GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ success() && github.ref == 'refs/heads/develop' }}
        name: Sonar Scan
        run: ./mvnw --no-transfer-progress initialize sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}
       


  snyk:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Snyk CLI
        uses: actions/cache@v3
        with:
          path: ~/.snyk
          key: ${{ runner.os }}-snyk-cli-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-snyk-cli-

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk test and generate report
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --all-projects --json > snyk_report.json

      - name: Upload results to GitHub code scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk_report.json


